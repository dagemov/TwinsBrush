@inject SweetAlertService swl

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation" />

<EditForm EditContext="EditContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div  class="card">
        <div class="card-header">            
            <h3>Category <i class="oi oi-tag"></i></h3>
        </div>
        <div class="card-body">
            <div class="mb-3">
                <label>Cateogry : </label>
                <div>
                    <InputText class="form-control" @bind-Value="@Category.Name" />
                    <ValidationMessage For="@(()=>Category.Name)" />
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary ">Save <i class="oi oi-plus"></i></button>
                <button class="btn btn-danger" @onclick="ReturnAction">Cancel <i class="oi oi-x"></i></button>
            </div>
           
        </div>
    </div>
    
   
</EditForm>

@code {
    private EditContext EditContext = null!;

    [Parameter]
    [EditorRequired]
    public Category Category { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    [EditorRequired]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessFully { get; set; }

    protected override void OnInitialized()
    {
        EditContext = new(Category);
    }
    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasMofied = EditContext.IsModified();
        if (!formWasMofied || FormPostedSuccessFully)
        {
            return;
        }
        //He don't finihsed the form or he try out the site
        var result = await swl.FireAsync(new SweetAlertOptions
            {
                Title = "Confirm",
                Text = "Do you want left the page and lose the changes ?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Yes"
            });

        var confirm = !string.IsNullOrEmpty(result.Value);
        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }
}
