@page "/countries/edit/{Id:int}"

@inject IRepository repository
@inject NavigationManager nav
@inject SweetAlertService swl

@attribute [Authorize(Roles = "Admin")]

<h3>Edit Country : @country!.Name</h3> 



@if (country is null) // validation to paint formulari ( wait the country to show)
{
    <div class="spinner" />
}
else
{
    <CountryForm ReturnAction="Return" OnValidSubmit="UpdateAsync" @ref="countryForm" Country="country" />
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Country? country;   
    private CountryForm? countryForm;

    //get the country from the databse with his data and headers. ( get country in memory)
    protected override async Task OnInitializedAsync()
    {
        //get the country with the Id , METADATA
        var responseHttp = await repository.Get<Country>($"/api/countries/{Id}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)//Edit at country invalid
            {
                nav.NavigateTo("/countries");
                return;
            }
            var message = await responseHttp.GetErrorMessageAsync();
            await swl.FireAsync(
                "Error",
                message,
                SweetAlertIcon.Error
            );
            return;
        }
        country = responseHttp.Response;
    }
    //Put the country 
    private async Task UpdateAsync()
    {
        var httpResponse = await repository.Put("/api/countries", country);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await swl.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {
        countryForm!.FormPostedSuccessFully = true;
        nav.NavigateTo("/countries");
    }
}
